function setupPostUpdateHandlers() {
    // === –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞ ===
    document.querySelectorAll(".edit-post-btn").forEach(button => {
        button.addEventListener("click", function () {
            const postId = this.dataset.postId;

            // 1. –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            document.querySelectorAll(".post-edit-form").forEach(form => {
                form.style.display = "none";
            });

            // 2. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
            document.querySelectorAll(".edit-post-btn").forEach(btn => {
                btn.style.display = "inline-block";
            });

            // 3. –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Å—Ç–∞
            this.style.display = "none";

            const postItem = document.getElementById(`post-${postId}`);
            const editForm = document.getElementById(`edit-form-${postId}`);
            const postContentEl = postItem.querySelector(".post-content");

            // –°–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å—Ç–∞
            if (postContentEl) {
                postContentEl.style.display = "none";
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            if (editForm) {
                editForm.style.display = "block";

                // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ñ–æ—Ä–º–µ
                editForm.scrollIntoView({behavior: "smooth", block: "center"});
            }
        });
    });

    // === –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ===
    document.addEventListener("click", function (e) {
        const cancelBtn = e.target.closest(".cancel-edit-btn");
        if (!cancelBtn) return;

        const postId = cancelBtn.dataset.postId;
        const postItem = document.getElementById(`post-${postId}`);
        const editForm = document.getElementById(`edit-form-${postId}`);
        const postContentEl = postItem.querySelector(".post-content");
        const editBtn = postItem.querySelector(".edit-post-btn");

        // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if (editForm) {
            editForm.style.display = "none";
        }

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å—Ç–∞
        if (postContentEl) {
            postContentEl.style.display = "block";
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
        if (editBtn) {
            editBtn.style.display = "inline-block";
        }
    });

    // === –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ===
    document.addEventListener("submit", async function (e) {
        if (!e.target.classList.contains("edit-post-form")) return;
        e.preventDefault();

        const form = e.target;
        const postId = form.dataset.postId;
        const formData = new FormData(form);

        try {
            const response = await fetch(`/posts/update/${postId}`, {
                method: "PATCH",
                body: formData,
            });

            if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏");

            const result = await response.json();
            const postItem = document.getElementById(`post-${postId}`);

            // === 1. –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ ===
            let postContentEl = postItem.querySelector(".post-content");

            if (result.post.content && result.post.content.trim()) {
                if (!postContentEl) {
                    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π .post-content
                    postContentEl = document.createElement("div");
                    postContentEl.className = "post-content";
                    postContentEl.textContent = result.post.content;

                    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ .post-header –∏–ª–∏ –ø–µ—Ä–µ–¥ .post-date
                    const header = postItem.querySelector(".post-header");
                    const dateEl = postItem.querySelector(".post-date");

                    if (dateEl) {
                        dateEl.insertAdjacentElement("beforebegin", postContentEl);
                    } else if (header) {
                        header.insertAdjacentElement("afterend", postContentEl);
                    } else {
                        postItem.appendChild(postContentEl);
                    }
                } else {
                    postContentEl.textContent = result.post.content;
                }
            } else if (postContentEl) {
                postContentEl.remove();
            }

            // === 2. –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ===
            const imageContainer = postItem.querySelector(".post-image-container");
            if (result.post.image) {
                if (!imageContainer) {
                    const imgHTML = `
                        <div class="post-image-container">
                            <img src="${result.post.image}" alt="–ü–æ—Å—Ç" class="post-image">
                        </div>`;
                    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ .post-header –∏–ª–∏ –ø–æ—Å–ª–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                    const header = postItem.querySelector(".post-header");
                    const content = postItem.querySelector(".post-content");

                    if (content) {
                        content.insertAdjacentHTML("afterend", imgHTML);
                    } else if (header) {
                        header.insertAdjacentHTML("afterend", imgHTML);
                    } else {
                        postItem.insertAdjacentHTML("afterbegin", imgHTML);
                    }
                } else {
                    imageContainer.querySelector("img").src = result.post.image;
                }
            } else if (imageContainer) {
                imageContainer.remove();
            }

            // === 3. –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –∏ –∫–æ–Ω—Ç–µ–Ω—Ç ===
            const editForm = document.getElementById(`edit-form-${postId}`);
            const editBtn = postItem.querySelector(".edit-post-btn");

            if (editForm) {
                editForm.style.display = "none";
            }
            if (postContentEl) {
                postContentEl.style.display = "block";
            }
            if (editBtn) {
                editBtn.style.display = "inline-block";
            }

            showToast("–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω", true);
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞:", error);
            showToast("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ—Å—Ç", false);
        }
    });

    // === –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ —Ñ–æ—Ä–º—ã ===
    document.addEventListener("click", async function (e) {
        const removeBtn = e.target.closest(".remove-current-image-btn");
        if (!removeBtn) return;

        const postId = removeBtn.dataset.postId;
        const currentImageWrapper = removeBtn.closest(".current-image");
        const postItem = document.getElementById(`post-${postId}`);
        const imageContainer = postItem.querySelector(".post-image-container");

        // üîí –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const originalImageHTML = currentImageWrapper.innerHTML;
        const postContentInput = document.querySelector(`#edit-form-${postId} textarea[name="content"]`);
        const originalContent = postContentInput ? postContentInput.value : "";

        // üí° –û—á–∏—â–∞–µ–º –ø–æ–ª–µ content, –µ—Å–ª–∏ —Ç–∞–º –±—ã–ª–æ "None"
        if (postContentInput && postContentInput.value === "None") {
            postContentInput.value = "";
        }

        // üñºÔ∏è –£–±–∏—Ä–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        if (currentImageWrapper) {
            currentImageWrapper.innerHTML = "<div class='loading'>–ó–∞–≥—Ä—É–∑–∫–∞...</div>";
        }

        try {
            const response = await fetch(`/posts/remove-image/${postId}`, {
                method: "POST",
            });

            if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");

            const data = await response.json();

            if (data.success) {
                showToast(data.message || "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ", true);

                // –£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ ‚Äî —É–¥–∞–ª—è–µ–º –±–ª–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                if (imageContainer) {
                    imageContainer.classList.add("fade-out");
                    setTimeout(() => imageContainer.remove(), 300);
                }
            } else {
                showToast(data.message, false);

                // ‚ùå –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è: –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è
                if (currentImageWrapper) {
                    currentImageWrapper.innerHTML = originalImageHTML;
                }

                if (postContentInput && postContentInput.value === "") {
                    postContentInput.value = originalContent;
                }
            }
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞:", error);
            showToast("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", false);

            // ‚ùå –ü—Ä–∏ –æ—à–∏–±–∫–µ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è
            if (currentImageWrapper) {
                currentImageWrapper.innerHTML = originalImageHTML;
            }

            if (postContentInput && postContentInput.value === "") {
                postContentInput.value = originalContent;
            }
        }
    });

}
